<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace是mybaits映射文件的唯一标识,与接口对应-->
<mapper namespace="cn.yd.mapper.RightsMapper">
    <select id="getRightsList" resultMap="rightsRM">

--         需求：查询当前父级下的所有子级
--         条件: 父级.id = 子级.parent_id
--         只查询父子级.

        SELECT p.id,p.name,p.parent_id,p.path,p.level,p.created,p.updated,
               c.id c_id,c.name c_name,c.parent_id c_parent_id,
               c.path c_path,c.level c_level,c.created c_created,c.updated c_updated
        FROM
                (SELECT * FROM rights WHERE parent_id=0)p
                    LEFT JOIN
            rights c
            ON p.id = c.parent_id
    </select>

    <!-- 完成左侧菜单列表的数据封装1-2级   -->
    <resultMap id="rightsRM" type="Rights" autoMapping="true">
        <id property="id" column="id"></id>
        <!-- 封装一对多数据-->
        <collection property="children" ofType="Rights">
            <id property="id" column="c_id"/>
            <result property="name" column="c_name"/>
            <result property="parentId" column="c_parent_id"/>
            <result property="path" column="c_path"/>
            <result property="level" column="c_level"/>
            <result property="created" column="c_created"/>
            <result property="updated" column="c_updated"/>
        </collection>
    </resultMap>

    <!--利用子查询的方式获取数据
        弊端: 查询的效率低
     -->
    <select id="getRightsList2" resultMap="childrenRM">
        select * from rights where parent_id=0
    </select>
    <resultMap id="childrenRM" type="Rights" autoMapping="true">
        <id property="id" column="id"/>
        <!--一对多封装  column="子查询的条件中传递的参数"-->
        <collection property="children" ofType="Rights"
                    select="selectRightsByParentId" column="id"/>
    </resultMap>
    <!--单表查询子结果-->
    <select id="selectRightsByParentId" resultType="Rights">
        select * from rights where parent_id=#{id}
    </select>

</mapper>